<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Photo Editor</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 0;
            padding: 0;
        }
        .container {
            margin-top: 50px;
        }
        #uploadedImage {
            max-width: 80%;
            height: auto;
            margin-top: 20px;
        }
        .btn {
            padding: 10px 20px;
            margin: 10px;
            cursor: pointer;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>AI Photo Editing Tool</h1>
        <input type="file" id="imageInput" accept="image/*" class="btn">
        <canvas id="canvas" style="display:none;"></canvas>
        <img id="uploadedImage" alt="Uploaded Image">
        <div>
            <button class="btn" onclick="applyGrayScale()">Grayscale</button>
            <button class="btn" onclick="applyInvert()">Invert Colors</button>
        </div>
    </div>

    <script>
        const imageInput = document.getElementById('imageInput');
        const uploadedImage = document.getElementById('uploadedImage');
        const canvas = document.getElementById('canvas');
        const ctx = canvas.getContext('2d');

        imageInput.addEventListener('change', () => {
            const file = imageInput.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    uploadedImage.src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        });

        uploadedImage.onload = () => {
            canvas.width = uploadedImage.width;
            canvas.height = uploadedImage.height;
            ctx.drawImage(uploadedImage, 0, 0, uploadedImage.width, uploadedImage.height);
        };

        function applyGrayScale() {
            const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
            const data = imageData.data;

            for (let i = 0; i < data.length; i += 4) {
                const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;
                data[i] = avg;
                data[i + 1] = avg;
                data[i + 2] = avg;
            }

            ctx.putImageData(imageData, 0, 0);
            uploadedImage.src = canvas.toDataURL();
        }

        function applyInvert() {
            const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
            const data = imageData.data;

            for (let i = 0; i < data.length; i += 4) {
                data[i] = 255 - data[i];
                data[i + 1] = 255 - data[i + 1];
                data[i + 2] = 255 - data[i + 2];
            }

            ctx.putImageData(imageData, 0, 0);
            uploadedImage.src = canvas.toDataURL();
        }
    </script>
</body>
</html>
